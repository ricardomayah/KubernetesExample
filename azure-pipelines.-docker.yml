# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev
- master

variables:
  - name: isQa
    value: $[or( eq(variables['Build.SourceBranch'], 'refs/heads/cicd'), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))]

  - name: isProd
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

stages:
  - stage: Docker
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: Build
        steps:
          - bash: echo $(DOCKER_TOKEN) | docker login -u $(DOCKER_USER) --password-stdin
            displayName: "Docker login"
          
          - bash: docker build . --file Dockerfile --tag k8s-hands-on-example:latestAzure
            workingDirectory:  '$(System.DefaultWorkingDirectory)/applicationExample/backend'
            displayName: "Build backend image"
          
          - bash: docker build . --file Dockerfile --tag frontend-k8s-hands-on:latestAzure
            workingDirectory:  '$(System.DefaultWorkingDirectory)/applicationExample/frontend'
            displayName: "Build frontend image"
          
          - bash : |
              docker tag k8s-hands-on-example:latestAzure $(DOCKER_USER)/k8s-hands-on-example:latestAzure
              docker tag frontend-k8s-hands-on:latestAzure $(DOCKER_USER)/frontend-k8s-hands-on:latestAzure
              docker push $(DOCKER_USER)/k8s-hands-on-example:latestAzure
              docker push $(DOCKER_USER)/frontend-k8s-hands-on:latestAzure
              echo $(isQa)
              echo $(isProd)
            displayName: "Push images"
  
  - stage: DeployQA
    condition: and( eq(variables.isQa, true) , succeeded('docker'))
    dependsOn: docker
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: DeployQA
        steps:
          - bash: ls 
  
  - stage: DeployProd
    condition: and( eq(variables.isPrd, true) , succeeded('docker'))
    dependsOn: docker
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: DeployProd
        steps:
          - bash: ls 
